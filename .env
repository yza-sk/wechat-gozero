# ===================== 基础环境变量（与配置文件直接关联） =====================
# MySQL数据库root密码（对应所有YAML中的${MYSQL_PASSWORD}）
# 需与docker-compose.yml中MySQL的MYSQL_ROOT_PASSWORD保持一致
MYSQL_PASSWORD=123456

# Redis缓存密码（对应所有YAML中的${REDIS_PASSWORD}）
# 需与docker-compose.yml中Redis的--requirepass参数保持一致
REDIS_PASSWORD=123456

# 服务通信IP/主机名（对应所有YAML中的${SERVER_IP}）
# 容器间通信：使用中间件服务名（如mysql、redis、kafka0）
# 外部访问：替换为部署服务器的实际IP（如192.168.1.100）
SERVER_IP=192.168.31.33

# JWT认证密钥（对应所有YAML中的${JWT_SECRET}）
# 用于API和RPC服务的Token签名与验证，生产环境需使用高强度密钥
JWT_SECRET=f93628fb1c061e7ff8f22453b7b7687dd8e392af02b7c07043c38100f6d0f4a2  # 建议长度≥32位


# ===================== 服务间通信变量（覆盖YAML中的默认配置） =====================
# 用户RPC服务地址（覆盖user-api中UserRpc.Endpoints的127.0.0.1:20001）
UserRpc__Endpoints=user-rpc:20001

# 群组RPC服务地址（覆盖group-api和msg-api中GroupRpc.Endpoints的127.0.0.1:20003）
GroupRpc__Endpoints=group-rpc:20003

# 消息RPC服务地址（覆盖msg-api中MsgRpc.Endpoints的127.0.0.1:20002）
MsgRpc__Endpoints=msg-rpc:20002

# Kafka消息队列地址（覆盖msg.yaml和group.yaml中MqConf.Brokers）
# 与docker-compose.yml中kafka0、kafka1的端口保持一致
MqConf__Brokers=${SERVER_IP}:9093,${SERVER_IP}:9094

# Kafka消息主题（统一msg.yaml和group.yaml中的MqConf.Topic）
MqConf__Topic=msg_chat

# 消息消费组（仅msg-api需要，对应msg (1).yaml中的MqConf.Group）
MqConf__Group=msg-api